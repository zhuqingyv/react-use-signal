/*! For license information please see react-use-signal.js.LICENSE.txt */
var t={408:(t,e)=>{Symbol.for("react.element"),Symbol.for("react.portal"),Symbol.for("react.fragment"),Symbol.for("react.strict_mode"),Symbol.for("react.profiler"),Symbol.for("react.provider"),Symbol.for("react.context"),Symbol.for("react.forward_ref"),Symbol.for("react.suspense"),Symbol.for("react.memo"),Symbol.for("react.lazy"),Symbol.iterator;var s={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},r=Object.assign,a={};function i(t,e,r){this.props=t,this.context=e,this.refs=a,this.updater=r||s}function n(){}function o(t,e,r){this.props=t,this.context=e,this.refs=a,this.updater=r||s}i.prototype.isReactComponent={},i.prototype.setState=function(t,e){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")},i.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},n.prototype=i.prototype;var c=o.prototype=new n;c.constructor=o,r(c,i.prototype),c.isPureReactComponent=!0;Array.isArray,Object.prototype.hasOwnProperty;var l={current:null};e.useEffect=function(t,e){return l.current.useEffect(t,e)},e.useState=function(t){return l.current.useState(t)}},294:(t,e,s)=>{t.exports=s(408)}},e={};function s(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,s),i.exports}s.d=(t,e)=>{for(var r in e)s.o(e,r)&&!s.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var r={};(()=>{s.d(r,{MZ:()=>n,$Q:()=>c,gQ:()=>p,Ab:()=>f,Uv:()=>g,B:()=>u,qs:()=>h});var t=s(294);const e=t=>null==t||""===t||"string"!=typeof t,a=(t,s,r)=>{try{if(e(s))return t;const a=s.split(".").reduce(((t,e)=>t[e]),t);return void 0===a?a===r?a:r:a}catch{return r}},i=(t,e,s)=>new Promise(((r,a)=>{try{const a=e.split(".");a.reduce(((t,e,r)=>(r===a.length-1&&(t[e]=s),t[e])),t),r(!0)}catch(t){a(t)}}));class n{static getPropsString=(...t)=>{const{length:s}=t;if(1===s&&!e(t[0]))return t[0]};static defaultObject=()=>Object.create(null);static getData=a;static setData=i;state=null;name=null;subscribers=null;manager=null;key=null;_setState=null;_updater=null;_updateCache=Object.create(null);_currentChangeTimer=null;_currentChangeLoop=new Map;_deepRegister=new Map;_willUpdateDeepRegisterList=new Set;_willUpdateDeepRegisterUpdater=null;constructor({state:t,name:e,manager:s,key:r,autoDestroy:a}){this.state=t,this.name=e,this.manager=s,this.key=r,this.autoDestroy=a,this.subscribers=new Map,a&&this.initHook()}initHook=()=>{(0,t.useEffect)((()=>()=>{this.onDestroy()}),[])};value=(...t)=>{const{length:s}=t,{propsString:r,updater:i}=this.registe(...t);if(1===s){const[s]=t;if(s instanceof Function)return[s(this.state),this.setState,i,this];if(!e(s))return[a(this.state,r),async t=>(this.setStateDeep(r,t,[r]),this.updateDeepRegister()),i,this]}return 2===s?[(0,t[1])(a(this.state,r)),async t=>(this.setStateDeep(r,t,[r]),this.updateDeepRegister()),i,this]:[this.state,this.setState,i,this]};registe=(...e)=>{const s=(0,t.useState)({})[1],r=this.subscribers.get(s);if(!r){const t=n.getPropsString(...e);return this.subscribers.set(s,{propsString:t,updater:s}),this.setDeepRegister(t,s),this.autoDisRegiste(s),this.subscribers.get(s)}return this.autoDisRegiste(s),this.setCurrentChangeLoop(s),r};autoDisRegiste=e=>{(0,t.useEffect)((()=>()=>{const{propsString:t}=this.subscribers.get(e);return this.subscribers.delete(e),this._deepRegister.delete(t),this._currentChangeLoop.delete(e),!0}),[])};setDeepRegister=(t,e)=>{if(void 0!==t){const s=this._deepRegister.get(t);if(s?.size)return void s.set(e,!0);const r=new Map;this._deepRegister.set(t,r),r.set(e,!0)}};onUpdate=t=>{const e=Array.from(this.subscribers.values());for(let s=0;s<e.length;s++){const r=e[s],{propsString:i,updater:n}=r;this._currentChangeLoop.get(n)||void 0!==a(t,i)&&n(Object.create(null))}};onDestroy=()=>(this.manager.destroySignal(this.name),this.onClear(),!0);onClear=()=>{this.state=null,this.name=null,this.subscribers.clear(),this._updateCache=Object.create(null),this._currentChangeLoop=[],this.manager=null};setState=(t=Object.create(null))=>{if(Object.assign(this._updateCache,t),this._updater)return this.updater;this._updater=new Promise(((t,e)=>{try{queueMicrotask((()=>{Object.assign(this.state,this._updateCache),this._currentChangeLoop.clear(),this.onUpdate(this._updateCache),t(this.state)}))}catch(t){e(t)}})).finally((()=>{this._updateCache=Object.create(null),this._updater=null,this._currentChangeLoop.clear()}))};setCurrentChangeLoop=t=>{const{_currentChangeLoop:e}=this;e.set(t,!0)};setStateDeep=(t,e,s=[])=>new Promise((async(r,a)=>{const n=i(this.state,t,e).catch((t=>t)).then((()=>this.state));n!==this.state&&a(n);try{s.forEach((t=>{this._willUpdateDeepRegisterList.add(t)})),r(this.state)}catch(t){a(t)}}));updateDeepRegister=()=>{if(this._willUpdateDeepRegisterUpdater)return this._willUpdateDeepRegisterUpdater;this._willUpdateDeepRegisterUpdater=new Promise(((t,e)=>{try{queueMicrotask((()=>{const{_willUpdateDeepRegisterList:e=[]}=this;e.forEach((t=>{const e=this._deepRegister.get(t);e?.size&&Array.from(e.keys()).forEach((t=>t(Object.create(null))))})),t(this.state),this._willUpdateDeepRegisterUpdater=null,this._willUpdateDeepRegisterList.clear(),this._currentChangeLoop.clear()}))}catch(t){e(t)}}))}}class o{static createState=(t=Object.create(null))=>{if(t instanceof Function)return t()||Object.create(null);if("object"!=typeof t){const e=typeof t;console.warn(`请确保信号状态源为引用类型,当前类型为'${e}',后续变更将不会响应!`)}return t};constructor(t,e){this.createSignal("global",t,"global",e)}_signal=new Map;getSignal=(t,...e)=>{const s=this._signal.get(t);return s?s.value(...e):(console.warn("Signal is undefined!"),[void 0,()=>null])};createSignal=(t,e=Object.create(null),s,r=!0)=>{const a=this._signal.get(t);if(a)return a.initHook(),[a.state,a.setState,a];const i=o.createState(e),c=new n({state:i,name:t,manager:this,key:s,autoDestroy:r});return this._signal.set(t,c),[c.state,c.setState,c]};destroySignal=t=>{this._signal.delete(t)};global=t=>this.getSignal("global",t);destroy=()=>{this._signal.forEach((t=>{this.destroySignal(t)}))}}const c=o;let l=null;const u=(t,e=!0)=>l||(l=new c(t,e)),h=(...t)=>{if(u(),0===t.length)return l.global();if(1===t.length){const[e]=t;if(e instanceof Function)return l.global(e)}return t.length>=1?l.getSignal(...t):void 0},p=(t,e,s,r=!0)=>(u({},r),l.createSignal(t,e,s,r)),g=t=>(u(Object.create(null),!1),l._signal.get(t)),f=()=>{l?.destroy&&(l.destroy(),l=null)}})();var a=r.MZ,i=r.$Q,n=r.gQ,o=r.Ab,c=r.Uv,l=r.B,u=r.qs;export{a as Signal,i as SignalManager,n as createSignal,o as destroySignalManager,c as getSignal,l as initSingalManager,u as useSignal};